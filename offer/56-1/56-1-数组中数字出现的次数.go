/**
 *
 * @author liangjf
 * @create on 2020/8/11
 * @version 1.0
 */
/**
一个整型数组 nums 里除两个数字之外，其他数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)。



示例 1：

输入：nums = [4,1,4,6]
输出：[1,6] 或 [6,1]
示例 2：

输入：nums = [1,2,10,4,1,4,3,3]
输出：[2,10] 或 [10,2]


限制：

2 <= nums.length <= 10000
*/
package _6_1

//1.异或得到不同两个数的值
//2.找到最低位的1
//3.异或为1,证明可以用这个最低位划分整个值, 一个保存为0, 一个是包含为1的, 并且相同的肯定在其中一个. 得到其中一个待求值
//4.根据得到的其中一个值, 再去异或第一步得到的结果, 就是另外一个待求值
func singleNumbers(nums []int) []int {
	//保存异或结果
	x := 0

	//得到不同两数的异或结果
	for _, v := range nums {
		x ^= v
	}

	//最低位的1
	flag := x & (-x)

	//不保存分离的一个值
	res := 0

	//分离得到一个值
	for _, v := range nums {
		if flag&v != 0 {
			res ^= v
		}
	}

	//用异或结果 异或 其中一个值 得到另外一个值
	return []int{res, x ^ res}
}
